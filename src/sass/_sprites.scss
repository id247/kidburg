/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$button-constructor-name: 'button-constructor';
$button-constructor-x: 230px;
$button-constructor-y: 216px;
$button-constructor-offset-x: -230px;
$button-constructor-offset-y: -216px;
$button-constructor-width: 252px;
$button-constructor-height: 46px;
$button-constructor-total-width: 579px;
$button-constructor-total-height: 408px;
$button-constructor-image: '../images/sprite.png';
$button-constructor: (230px, 216px, -230px, -216px, 252px, 46px, 579px, 408px, '../images/sprite.png', 'button-constructor', );
$button-contest-name: 'button-contest';
$button-contest-x: 0px;
$button-contest-y: 73px;
$button-contest-offset-x: 0px;
$button-contest-offset-y: -73px;
$button-contest-width: 429px;
$button-contest-height: 73px;
$button-contest-total-width: 579px;
$button-contest-total-height: 408px;
$button-contest-image: '../images/sprite.png';
$button-contest: (0px, 73px, 0px, -73px, 429px, 73px, 579px, 408px, '../images/sprite.png', 'button-contest', );
$button-more-name: 'button-more';
$button-more-x: 375px;
$button-more-y: 146px;
$button-more-offset-x: -375px;
$button-more-offset-y: -146px;
$button-more-width: 169px;
$button-more-height: 37px;
$button-more-total-width: 579px;
$button-more-total-height: 408px;
$button-more-image: '../images/sprite.png';
$button-more: (375px, 146px, -375px, -146px, 169px, 37px, 579px, 408px, '../images/sprite.png', 'button-more', );
$button-professions-name: 'button-professions';
$button-professions-x: 0px;
$button-professions-y: 0px;
$button-professions-offset-x: 0px;
$button-professions-offset-y: 0px;
$button-professions-width: 579px;
$button-professions-height: 73px;
$button-professions-total-width: 579px;
$button-professions-total-height: 408px;
$button-professions-image: '../images/sprite.png';
$button-professions: (0px, 0px, 0px, 0px, 579px, 73px, 579px, 408px, '../images/sprite.png', 'button-professions', );
$button-watch-name: 'button-watch';
$button-watch-x: 0px;
$button-watch-y: 146px;
$button-watch-offset-x: 0px;
$button-watch-offset-y: -146px;
$button-watch-width: 375px;
$button-watch-height: 70px;
$button-watch-total-width: 579px;
$button-watch-total-height: 408px;
$button-watch-image: '../images/sprite.png';
$button-watch: (0px, 146px, 0px, -146px, 375px, 70px, 579px, 408px, '../images/sprite.png', 'button-watch', );
$kidburg-name: 'kidburg';
$kidburg-x: 0px;
$kidburg-y: 216px;
$kidburg-offset-x: 0px;
$kidburg-offset-y: -216px;
$kidburg-width: 230px;
$kidburg-height: 78px;
$kidburg-total-width: 579px;
$kidburg-total-height: 408px;
$kidburg-image: '../images/sprite.png';
$kidburg: (0px, 216px, 0px, -216px, 230px, 78px, 579px, 408px, '../images/sprite.png', 'kidburg', );
$logotype-name: 'logotype';
$logotype-x: 429px;
$logotype-y: 73px;
$logotype-offset-x: -429px;
$logotype-offset-y: -73px;
$logotype-width: 148px;
$logotype-height: 52px;
$logotype-total-width: 579px;
$logotype-total-height: 408px;
$logotype-image: '../images/sprite.png';
$logotype: (429px, 73px, -429px, -73px, 148px, 52px, 579px, 408px, '../images/sprite.png', 'logotype', );
$play-name: 'play';
$play-x: 0px;
$play-y: 294px;
$play-offset-x: 0px;
$play-offset-y: -294px;
$play-width: 120px;
$play-height: 114px;
$play-total-width: 579px;
$play-total-height: 408px;
$play-image: '../images/sprite.png';
$play: (0px, 294px, 0px, -294px, 120px, 114px, 579px, 408px, '../images/sprite.png', 'play', );
$soc-insta-name: 'soc-insta';
$soc-insta-x: 544px;
$soc-insta-y: 146px;
$soc-insta-offset-x: -544px;
$soc-insta-offset-y: -146px;
$soc-insta-width: 24px;
$soc-insta-height: 24px;
$soc-insta-total-width: 579px;
$soc-insta-total-height: 408px;
$soc-insta-image: '../images/sprite.png';
$soc-insta: (544px, 146px, -544px, -146px, 24px, 24px, 579px, 408px, '../images/sprite.png', 'soc-insta', );
$soc-ok-name: 'soc-ok';
$soc-ok-x: 375px;
$soc-ok-y: 183px;
$soc-ok-offset-x: -375px;
$soc-ok-offset-y: -183px;
$soc-ok-width: 24px;
$soc-ok-height: 24px;
$soc-ok-total-width: 579px;
$soc-ok-total-height: 408px;
$soc-ok-image: '../images/sprite.png';
$soc-ok: (375px, 183px, -375px, -183px, 24px, 24px, 579px, 408px, '../images/sprite.png', 'soc-ok', );
$soc-vk-name: 'soc-vk';
$soc-vk-x: 399px;
$soc-vk-y: 183px;
$soc-vk-offset-x: -399px;
$soc-vk-offset-y: -183px;
$soc-vk-width: 24px;
$soc-vk-height: 24px;
$soc-vk-total-width: 579px;
$soc-vk-total-height: 408px;
$soc-vk-image: '../images/sprite.png';
$soc-vk: (399px, 183px, -399px, -183px, 24px, 24px, 579px, 408px, '../images/sprite.png', 'soc-vk', );
$spritesheet-width: 579px;
$spritesheet-height: 408px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($button-constructor, $button-contest, $button-more, $button-professions, $button-watch, $kidburg, $logotype, $play, $soc-insta, $soc-ok, $soc-vk, );
$spritesheet: (579px, 408px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
